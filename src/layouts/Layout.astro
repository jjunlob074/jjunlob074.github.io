---
import "../styles/global.css";
import "../styles/fonts.css";

---

<!doctype html>
<html lang="en" class="bg-stone-100 sm:cursor-none">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="I primarily focus on TypeScript-based full-stack projects (Node.js, React, React Native) and cloud platforms (AWS, DigitalOcean, Vercel, Firebase, etc.), serving as a Full Stack Engineer." />
    <meta name="keywords" content="full stack engineer, web developer, React, Node.js, JavaScript, TypeScript, cloud computing, software engineering" />
    <meta name="author" content="Jose Diego Junquera" />
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://www.kuktenko.dev">
    <meta property="og:title" content="Jose Diego Junquera | Full Stack Engineer">
    <meta property="og:description" content="Junior web developer">
    <meta property="og:image" content="/images/theme.webp">
    <meta name="robots" content="index, follow">
    <meta name="googlebot" content="index, follow">
    <link rel="canonical" href="https://www.kuktenko.dev">
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/webp" href="/favicon.webp" />
    <meta name="generator" content={Astro.generator} />
    <!-- Preload de las fuentes -->
    <link rel="preload" href="/fonts/RobotoCondensed-Light.ttf" as="font" type="font/ttf" crossorigin="anonymous">
    <link rel="preload" href="/fonts/RobotoCondensed-Medium.ttf" as="font" type="font/ttf" crossorigin="anonymous">
    <link rel="preload" href="/fonts/RobotoCondensed-Bold.ttf" as="font" type="font/ttf" crossorigin="anonymous">
    <title>{Astro.props.title}</title>
  </head>
  <body class="bg-slate-950">
    <!-- Contenedor para las partÃ­culas -->
    <div id="tsparticles" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%;"></div>

    <slot />

    <script is:inline type="module">
      import { tsParticles } from "https://cdn.jsdelivr.net/npm/@tsparticles/engine@3.1.0/+esm";
      import { loadAll } from "https://cdn.jsdelivr.net/npm/@tsparticles/all@3.1.0/+esm";

      async function loadParticles(options) {
        await loadAll(tsParticles);
        await tsParticles.load({ id: "tsparticles", options });
      }

      loadParticles({
        particles: {
          destroy: {
            mode: "split",
            split: {
              count: 1,
              factor: {
                value: { min: 2, max: 4 }
              },
              rate: {
                value: 100
              },
              particles: {
                life: {
                  count: 1,
                  duration: {
                    value: { min: 2, max: 3 }
                  }
                },
                move: {
                  speed: {
                    min: 10,
                    max: 15
                  }
                }
              }
            }
          },
          number: {
            value: 20
          },
          color: {
            value: [
              "#3998D0",
              "#2EB6AF",
              "#A9BD33",
              "#FEC73B",
              "#F89930",
              "#F45623",
              "#D62E32",
              "#EB586E",
              "#9952CF"
            ]
          },
          shape: {
            type: "circle"
          },
          opacity: {
            value: 0.6
          },
          size: {
            value: { min: 10, max: 15 }
          },
          collisions: {
            enable: true,
            mode: "bounce"
          },
          move: {
            enable: true,
            speed: 2,
            outModes: "bounce"
          }
        },
        interactivity: {
          events: {
            onClick: {
              enable: true,
              mode: "pop"
            }
          }
        },
      });
    </script>
  </body>
</html>
